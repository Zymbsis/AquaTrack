{"version":3,"file":"static/js/968.36adf493.chunk.js","mappings":"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","sources":["webpack://project-digitall3.0-r/./src/components/sigInPage/SignInForm/SignInForm.module.css?d48c","components/sigInPage/SignInForm/SignInForm.jsx","pages/SignInPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"registerContainer\":\"SignInForm_registerContainer__nNy1S\",\"title\":\"SignInForm_title__p6W+b\",\"form\":\"SignInForm_form__0AAJH\",\"labelWrapper\":\"SignInForm_labelWrapper__TBlKK\",\"label\":\"SignInForm_label__TQTdh\",\"inputWrapper\":\"SignInForm_inputWrapper__UFs9W\",\"input\":\"SignInForm_input__Ii5Yp\",\"errorMessage\":\"SignInForm_errorMessage__+UsY+\",\"inputError\":\"SignInForm_inputError__FQnkN\",\"button\":\"SignInForm_button__gPVXQ\",\"signUpText\":\"SignInForm_signUpText__cXH94\",\"signUpLink\":\"SignInForm_signUpLink__ONiVn\",\"showPasswordBtn\":\"SignInForm_showPasswordBtn__wCQ55\",\"icon\":\"SignInForm_icon__hPXti\"};","import { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { NavLink } from 'react-router-dom';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from '../../../redux/auth/operations';\nimport { signInFormSchema } from 'validationSchemas';\nimport { AuthFormLayout, Icon } from 'shared';\n\nimport clsx from 'clsx';\nimport css from './SignInForm.module.css';\n\nconst SignInForm = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const dispatch = useDispatch();\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(signInFormSchema),\n    mode: 'onSubmit',\n    defaultValues: {\n      email: '',\n      password: '',\n    },\n  });\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const onSubmit = data => {\n    dispatch(logIn(data));\n    reset();\n  };\n\n  return (\n    <AuthFormLayout>\n      <div className={css.registerContainer}>\n        <h2 className={css.title}>Sign In</h2>\n        <form onSubmit={handleSubmit(onSubmit)} className={css.form}>\n          <label className={css.labelWrapper}>\n            <span className={css.label}>Email: </span>\n            <input\n              type=\"email\"\n              {...register('email')}\n              placeholder=\"Enter your email\"\n              className={clsx(css.input, { [css.inputError]: errors.email })}\n            />\n            <p className={css.errorMessage}>{errors.email?.message}</p>\n          </label>\n          <label className={css.labelWrapper}>\n            <span className={css.label}>Password: </span>\n            <div className={css.inputWrapper}>\n              <input\n                type={showPassword ? 'text' : 'password'}\n                {...register('password')}\n                placeholder=\"Enter your password\"\n                className={clsx(css.input, {\n                  [css.inputError]: errors.password,\n                })}\n              />\n              <button\n                className={css.showPasswordBtn}\n                type=\"button\"\n                onClick={handleClickShowPassword}\n              >\n                {showPassword ? (\n                  <Icon className={css.icon} iconId=\"icon-eye-off\" />\n                ) : (\n                  <Icon className={css.icon} iconId=\"icon-eye\" />\n                )}\n              </button>\n            </div>\n            <p className={css.errorMessage}>{errors.password?.message}</p>\n          </label>\n          <button type=\"submit\" className={css.button}>\n            Sign in\n          </button>\n        </form>\n        <p className={css.signUpText}>\n          Don't have an account?{' '}\n          <NavLink to=\"/signup\" className={css.signUpLink}>\n            Sign Up\n          </NavLink>\n        </p>\n      </div>\n    </AuthFormLayout>\n  );\n};\n\nexport default SignInForm;\n","import { Container, Section, Logo } from 'shared';\nimport { AdvantagesSection } from 'components';\nimport SignInForm from 'components/sigInPage/SignInForm/SignInForm';\n\nconst SignInPage = () => {\n  return (\n    <Section>\n      <Container>\n        <Logo />\n        <SignInForm />\n        <AdvantagesSection className=\"signInPage\" />\n      </Container>\n    </Section>\n  );\n};\n\nexport default SignInPage;\n"],"names":["_errors$email","_errors$password","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","dispatch","useDispatch","_useForm","useForm","resolver","yupResolver","signInFormSchema","mode","defaultValues","email","password","register","handleSubmit","reset","errors","formState","_jsx","AuthFormLayout","children","_jsxs","className","css","onSubmit","data","logIn","_objectSpread","type","placeholder","clsx","_defineProperty","message","onClick","Icon","iconId","NavLink","to","Section","Container","Logo","SignInForm","AdvantagesSection"],"sourceRoot":""}