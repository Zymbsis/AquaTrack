{"version":3,"file":"static/js/799.456a2631.chunk.js","mappings":"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","sources":["webpack://project-digitall3.0-r/./src/components/sigInPage/SignInForm/SignInForm.module.css?d48c","components/sigInPage/SignInForm/SignInForm.jsx","webpack://project-digitall3.0-r/./src/pages/SignInPage/SignInPage.module.css?c872","pages/SignInPage/SignInPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"SignInForm_wrapper__xHsb8\",\"form\":\"SignInForm_form__0AAJH\",\"labelWrapper\":\"SignInForm_labelWrapper__TBlKK\",\"label\":\"SignInForm_label__TQTdh\",\"inputWrapper\":\"SignInForm_inputWrapper__UFs9W\",\"input\":\"SignInForm_input__Ii5Yp\",\"errorMessage\":\"SignInForm_errorMessage__+UsY+\",\"inputError\":\"SignInForm_inputError__FQnkN\",\"button\":\"SignInForm_button__gPVXQ\",\"title\":\"SignInForm_title__p6W+b\",\"signUpText\":\"SignInForm_signUpText__cXH94\",\"signUpLink\":\"SignInForm_signUpLink__ONiVn\",\"showPasswordBtn\":\"SignInForm_showPasswordBtn__wCQ55\",\"icon\":\"SignInForm_icon__hPXti\"};","import { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport css from './SignInForm.module.css';\nimport clsx from 'clsx';\nimport { NavLink } from 'react-router-dom';\nimport { useState } from 'react';\nimport { Icon } from 'shared';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from '../../../redux/auth/operations';\n\nconst SignInForm = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const dispatch = useDispatch();\n  const formValidation = Yup.object({\n    email: Yup.string().email().required(),\n    password: Yup.string()\n      .min(8, 'must contain at least 8 characters')\n      .max(64)\n      .required(),\n  });\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(formValidation),\n    mode: 'onBlur',\n    defaultValues: {\n      email: '',\n      password: '',\n    },\n  });\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const onSubmit = data => {\n    dispatch(logIn(data));\n    reset();\n  };\n\n  return (\n    <div className={css.wrapper}>\n      <h2 className={css.title}>Sign In</h2>\n      <form onSubmit={handleSubmit(onSubmit)} className={css.form}>\n        <label className={css.labelWrapper}>\n          <span className={css.label}>Email: </span>\n          <input\n            type=\"email\"\n            {...register('email')}\n            placeholder=\"Enter your email\"\n            className={clsx(css.input, { [css.inputError]: errors.email })}\n          />\n          <p className={css.errorMessage}>{errors.email?.message}</p>\n        </label>\n        <label className={css.labelWrapper}>\n          <span className={css.label}>Password: </span>\n          <div className={css.inputWrapper}>\n            <input\n              type={showPassword ? 'text' : 'password'}\n              {...register('password')}\n              placeholder=\"Enter your password\"\n              className={clsx(css.input, { [css.inputError]: errors.password })}\n            />\n            <button\n              className={css.showPasswordBtn}\n              type=\"button\"\n              onClick={handleClickShowPassword}\n            >\n              {showPassword ? (\n                <Icon className={css.icon} iconId=\"icon-eye-off\" />\n              ) : (\n                <Icon className={css.icon} iconId=\"icon-eye\" />\n              )}\n            </button>\n          </div>\n          <p className={css.errorMessage}>{errors.password?.message}</p>\n        </label>\n        <button type=\"submit\" className={css.button}>\n          Sign in\n        </button>\n      </form>\n      <p className={css.signUpText}>\n        Don't have an account?{' '}\n        <NavLink to=\"/signup\" className={css.signUpLink}>\n          Sign Up\n        </NavLink>\n      </p>\n    </div>\n  );\n};\n\nexport default SignInForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"SignInPage_wrapper__j6+v6\"};","import SignInForm from 'components/sigInPage/SignInForm/SignInForm';\nimport { Container, Section } from 'shared';\nimport Logo from 'shared/components/Logo/Logo';\nimport css from './SignInPage.module.css';\nimport { AdvantagesSection } from 'components';\nimport { useEffect, useState } from 'react';\n\nconst SignInPage = () => {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowWidth(window.innerWidth);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.addEventListener('resize', handleResize);\n    };\n  }, []);\n\n  return (\n    <Section>\n      <Container className={css.container}>\n        <div className={css.wrapper}>\n          <Logo />\n          <SignInForm />\n        </div>\n        {windowWidth > 1439.98 && <AdvantagesSection />}\n      </Container>\n    </Section>\n  );\n};\n\nexport default SignInPage;\n"],"names":["_errors$email","_errors$password","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","dispatch","useDispatch","formValidation","Yup","email","required","password","min","max","_useForm","useForm","resolver","yupResolver","mode","defaultValues","register","handleSubmit","reset","errors","formState","_jsxs","className","css","children","_jsx","onSubmit","data","logIn","_objectSpread","type","placeholder","clsx","_defineProperty","message","onClick","Icon","iconId","NavLink","to","window","innerWidth","windowWidth","setWindowWidth","useEffect","handleResize","addEventListener","Section","Container","Logo","SignInForm","AdvantagesSection"],"sourceRoot":""}