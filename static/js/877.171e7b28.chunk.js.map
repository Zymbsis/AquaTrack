{"version":3,"file":"static/js/877.171e7b28.chunk.js","mappings":"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","sources":["webpack://project-digitall3.0-r/./src/components/signUpPage/SignUpForm/SignUpForm.module.css?9268","components/signUpPage/SignUpForm/SignUpForm.jsx","pages/SignUpPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"layout\":\"SignUpForm_layout__N7edf\",\"registerContainer\":\"SignUpForm_registerContainer__eYjbh\",\"title\":\"SignUpForm_title__K-Qox\",\"form\":\"SignUpForm_form__4DtFD\",\"field\":\"SignUpForm_field__Psf2U\",\"showPasswordBtn\":\"SignUpForm_showPasswordBtn__uLYV-\",\"icon\":\"SignUpForm_icon__2LLbR\",\"input\":\"SignUpForm_input__QW3T3\",\"submit\":\"SignUpForm_submit__+QNoq\",\"inviteOnLogIn\":\"SignUpForm_inviteOnLogIn__SXq9e\",\"inviteText\":\"SignUpForm_inviteText__JBVKJ\",\"link\":\"SignUpForm_link__oDand\",\"errorField\":\"SignUpForm_errorField__cmbsE\",\"errorsMessage\":\"SignUpForm_errorsMessage__yqUD3\",\"inputError\":\"SignUpForm_inputError__x5D-v\"};","import { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { register } from '../../../redux/auth/operations';\nimport { signUpFormSchema } from 'validationSchemas';\nimport { AuthFormLayout, Icon } from 'shared';\nimport { useModal } from 'context';\n\nimport clsx from 'clsx';\nimport css from './SignUpForm.module.css';\nimport { selectIsError } from '../../../redux/auth/selectors';\nimport { SuccessfullySendEmail } from '../..';\n\nconst SignUpForm = () => {\n  const dispatch = useDispatch();\n  const { openModal } = useModal();\n  const [showPassword, setShowPassword] = useState(false);\n  const isError = useSelector(selectIsError);\n  const {\n    register: registerField,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(signUpFormSchema),\n    mode: 'onSubmit',\n  });\n  console.log(isError);\n\n  const onSubmit = data => {\n    const { email, password } = data;\n    const newEmail = email.toLowerCase();\n    dispatch(register({ email: newEmail, password }));\n    reset();\n    openModal(<SuccessfullySendEmail email={email} />);\n  };\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  return (\n    <AuthFormLayout className={css.layout}>\n      <div className={css.registerContainer}>\n        <h2 className={css.title}>Sign Up</h2>\n        <form className={css.form} onSubmit={handleSubmit(onSubmit)}>\n          <label\n            className={clsx(css.field, { [css.errorField]: errors.email })}\n          >\n            Email\n            <input\n              className={clsx(css.input, { [css.inputError]: errors.email })}\n              placeholder=\"Enter your email\"\n              {...registerField('email', {\n                required: true,\n              })}\n            />\n          </label>\n          {errors.email && (\n            <p className={css.errorsMessage}>{errors.email.message}</p>\n          )}\n\n          <label\n            className={clsx(css.field, { [css.errorField]: errors.password })}\n          >\n            Password\n            <input\n              className={clsx(css.input, { [css.inputError]: errors.password })}\n              type={showPassword ? 'text' : 'password'}\n              placeholder=\"Enter your password\"\n              {...registerField('password', { required: true })}\n            />\n            <button\n              className={css.showPasswordBtn}\n              type=\"button\"\n              onClick={handleClickShowPassword}\n            >\n              {showPassword ? (\n                <Icon className={css.icon} iconId=\"icon-eye-off\" />\n              ) : (\n                <Icon className={css.icon} iconId=\"icon-eye\" />\n              )}\n            </button>\n          </label>\n          {errors.password && (\n            <p className={css.errorsMessage}>\n              {'must contain at least 8 characters'}\n            </p>\n          )}\n\n          <label\n            className={clsx(css.field, {\n              [css.errorField]: errors.confirmPassword,\n            })}\n          >\n            Repeat password\n            <input\n              className={clsx(css.input, {\n                [css.inputError]: errors.confirmPassword,\n              })}\n              type={showPassword ? 'text' : 'password'}\n              placeholder=\"Repeat password\"\n              {...registerField('confirmPassword', { required: true })}\n            />\n            <button\n              className={css.showPasswordBtn}\n              type=\"button\"\n              onClick={handleClickShowPassword}\n            >\n              {showPassword ? (\n                <Icon className={css.icon} iconId=\"icon-eye-off\" />\n              ) : (\n                <Icon className={css.icon} iconId=\"icon-eye\" />\n              )}\n            </button>\n          </label>\n          {errors.confirmPassword && (\n            <p className={css.errorsMessage}>{'password does not match'}</p>\n          )}\n\n          <input className={css.submit} type=\"submit\" value=\"Sign Up\" />\n        </form>\n        <div className={css.inviteOnLogIn}>\n          <p className={css.inviteText}>Already have account?</p>\n          <Link className={css.link} to=\"/signin\">\n            Sign In\n          </Link>\n        </div>\n      </div>\n    </AuthFormLayout>\n  );\n};\n\nexport default SignUpForm;\n","import { Container, Logo, Section } from 'shared';\nimport { AdvantagesSection } from 'components';\nimport SignUpForm from 'components/signUpPage/SignUpForm/SignUpForm';\n\nconst SignUpPage = () => {\n  return (\n    <Section>\n      <Container>\n        <Logo />\n        <SignUpForm />\n        <AdvantagesSection className=\"signUpPage\" />\n      </Container>\n    </Section>\n  );\n};\n\nexport default SignUpPage;\n"],"names":["dispatch","useDispatch","openModal","useModal","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","isError","useSelector","selectIsError","_useForm","useForm","resolver","yupResolver","signUpFormSchema","mode","registerField","register","handleSubmit","reset","errors","formState","console","log","handleClickShowPassword","_jsx","AuthFormLayout","className","css","children","_jsxs","onSubmit","data","email","password","newEmail","toLowerCase","SuccessfullySendEmail","clsx","_defineProperty","_objectSpread","placeholder","required","message","type","onClick","Icon","iconId","confirmPassword","value","Link","to","Section","Container","Logo","SignUpForm","AdvantagesSection"],"sourceRoot":""}