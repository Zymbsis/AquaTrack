{"version":3,"file":"static/js/968.c460e879.chunk.js","mappings":"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","sources":["helpers/handleGoogleSignUp.js","webpack://project-digitall3.0-r/./src/components/sigInPage/SignInForm/SignInForm.module.css?d48c","components/sigInPage/SignInForm/SignInForm.jsx","pages/SignInPage.jsx","webpack://project-digitall3.0-r/./src/shared/components/GoogleBtn/GoogleBtn.module.css?9da0","shared/components/GoogleBtn/GoogleBtn.jsx"],"sourcesContent":["import toast from 'react-hot-toast';\nimport { AXIOS_INSTANCE } from '../redux/constants';\n\nexport const handleGoogleSignUp = async () => {\n  try {\n    const response = await AXIOS_INSTANCE.get('users/get-oauth-url');\n    const { url } = response.data.data;\n    window.location.href = url;\n  } catch (error) {\n    toast.error('Error getting Google OAuth URL');\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"registerContainer\":\"SignInForm_registerContainer__nNy1S\",\"title\":\"SignInForm_title__p6W+b\",\"form\":\"SignInForm_form__0AAJH\",\"labelWrapper\":\"SignInForm_labelWrapper__TBlKK\",\"label\":\"SignInForm_label__TQTdh\",\"inputWrapper\":\"SignInForm_inputWrapper__UFs9W\",\"input\":\"SignInForm_input__Ii5Yp\",\"errorMessage\":\"SignInForm_errorMessage__+UsY+\",\"inputError\":\"SignInForm_inputError__FQnkN\",\"button\":\"SignInForm_button__gPVXQ\",\"signUpText\":\"SignInForm_signUpText__cXH94\",\"signUpLink\":\"SignInForm_signUpLink__ONiVn\",\"showPasswordBtn\":\"SignInForm_showPasswordBtn__wCQ55\",\"icon\":\"SignInForm_icon__hPXti\"};","import { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { NavLink } from 'react-router-dom';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from '../../../redux/auth/operations';\nimport { signInFormSchema } from 'validationSchemas';\nimport { AuthFormLayout, Icon } from 'shared';\n\nimport clsx from 'clsx';\nimport css from './SignInForm.module.css';\nimport { handleGoogleSignUp } from 'helpers/handleGoogleSignUp';\nimport GoogleBtn from 'shared/components/GoogleBtn/GoogleBtn';\n\nconst SignInForm = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const dispatch = useDispatch();\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(signInFormSchema),\n    mode: 'onSubmit',\n    defaultValues: {\n      email: '',\n      password: '',\n    },\n  });\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const onSubmit = data => {\n    const { email, password } = data;\n    const newEmail = email.toLowerCase();\n    dispatch(logIn({ email: newEmail, password }));\n    reset();\n  };\n\n  return (\n    <AuthFormLayout>\n      <div className={css.registerContainer}>\n        <h2 className={css.title}>Sign In</h2>\n        <form onSubmit={handleSubmit(onSubmit)} className={css.form}>\n          <label className={css.labelWrapper}>\n            <span className={css.label}>Email: </span>\n            <input\n              type=\"email\"\n              {...register('email')}\n              placeholder=\"Enter your email\"\n              className={clsx(css.input, { [css.inputError]: errors.email })}\n            />\n            <p className={css.errorMessage}>{errors.email?.message}</p>\n          </label>\n          <label className={css.labelWrapper}>\n            <span className={css.label}>Password: </span>\n            <div className={css.inputWrapper}>\n              <input\n                type={showPassword ? 'text' : 'password'}\n                {...register('password')}\n                placeholder=\"Enter your password\"\n                className={clsx(css.input, {\n                  [css.inputError]: errors.password,\n                })}\n              />\n              <button\n                className={css.showPasswordBtn}\n                type=\"button\"\n                onClick={handleClickShowPassword}\n              >\n                {showPassword ? (\n                  <Icon className={css.icon} iconId=\"icon-eye-off\" />\n                ) : (\n                  <Icon className={css.icon} iconId=\"icon-eye\" />\n                )}\n              </button>\n            </div>\n            <p className={css.errorMessage}>{errors.password?.message}</p>\n          </label>\n          <button type=\"submit\" className={css.button}>\n            Sign in\n          </button>\n        </form>\n\n        <GoogleBtn\n          context={'Sign In with Google'}\n          onClick={handleGoogleSignUp}\n        />\n        <p className={css.signUpText}>\n          Don't have an account?{' '}\n          <NavLink to=\"/signup\" className={css.signUpLink}>\n            Sign Up\n          </NavLink>\n        </p>\n      </div>\n    </AuthFormLayout>\n  );\n};\n\nexport default SignInForm;\n","import { Container, Section, Logo } from 'shared';\nimport { AdvantagesSection } from 'components';\nimport SignInForm from 'components/sigInPage/SignInForm/SignInForm';\n\nconst SignInPage = () => {\n  return (\n    <Section>\n      <Container>\n        <Logo />\n        <SignInForm />\n        <AdvantagesSection className=\"signInPage\" />\n      </Container>\n    </Section>\n  );\n};\n\nexport default SignInPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"icon_google\":\"GoogleBtn_icon_google__WMmJL\",\"google_btn\":\"GoogleBtn_google_btn__+WD4M\"};","import { FcGoogle } from 'react-icons/fc';\nimport { Button } from 'shared';\nimport css from './GoogleBtn.module.css';\n\nconst GoogleBtn = ({ context, onClick }) => {\n  return (\n    <Button className={css.google_btn} onClick={onClick}>\n      <FcGoogle className={css.icon_google} />\n      {context}\n    </Button>\n  );\n};\n\nexport default GoogleBtn;\n"],"names":["handleGoogleSignUp","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","url","_context","prev","next","AXIOS_INSTANCE","sent","data","window","location","href","t0","toast","stop","apply","arguments","_errors$email","_errors$password","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","dispatch","useDispatch","_useForm","useForm","resolver","yupResolver","signInFormSchema","mode","defaultValues","email","password","register","handleSubmit","reset","errors","formState","_jsx","AuthFormLayout","children","_jsxs","className","css","onSubmit","newEmail","toLowerCase","logIn","_objectSpread","type","placeholder","clsx","_defineProperty","message","onClick","Icon","iconId","GoogleBtn","context","NavLink","to","Section","Container","Logo","SignInForm","AdvantagesSection","Button","FcGoogle"],"sourceRoot":""}