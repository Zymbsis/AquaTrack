{"version":3,"file":"static/js/877.b23ce048.chunk.js","mappings":"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","sources":["helpers/handleGoogleSignUp.js","webpack://project-digitall3.0-r/./src/components/signUpPage/SignUpForm/SignUpForm.module.css?9268","components/signUpPage/SignUpForm/SignUpForm.jsx","pages/SignUpPage.jsx","webpack://project-digitall3.0-r/./src/shared/components/GoogleBtn/GoogleBtn.module.css?9da0","shared/components/GoogleBtn/GoogleBtn.jsx"],"sourcesContent":["import toast from 'react-hot-toast';\nimport { AXIOS_INSTANCE } from '../redux/constants';\n\nexport const handleGoogleSignUp = async () => {\n  try {\n    const response = await AXIOS_INSTANCE.get('users/get-oauth-url');\n    const { url } = response.data.data;\n    window.location.href = url;\n  } catch (error) {\n    toast.error('Error getting Google OAuth URL');\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"layout\":\"SignUpForm_layout__N7edf\",\"registerContainer\":\"SignUpForm_registerContainer__eYjbh\",\"title\":\"SignUpForm_title__K-Qox\",\"form\":\"SignUpForm_form__4DtFD\",\"field\":\"SignUpForm_field__Psf2U\",\"showPasswordBtn\":\"SignUpForm_showPasswordBtn__uLYV-\",\"icon\":\"SignUpForm_icon__2LLbR\",\"input\":\"SignUpForm_input__QW3T3\",\"submit\":\"SignUpForm_submit__+QNoq\",\"inviteOnLogIn\":\"SignUpForm_inviteOnLogIn__SXq9e\",\"inviteText\":\"SignUpForm_inviteText__JBVKJ\",\"link\":\"SignUpForm_link__oDand\",\"errorField\":\"SignUpForm_errorField__cmbsE\",\"errorsMessage\":\"SignUpForm_errorsMessage__yqUD3\",\"inputError\":\"SignUpForm_inputError__x5D-v\"};","import { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { register } from '../../../redux/auth/operations';\nimport { signUpFormSchema } from 'validationSchemas';\nimport { AuthFormLayout, Icon } from 'shared';\nimport clsx from 'clsx';\nimport css from './SignUpForm.module.css';\nimport { handleGoogleSignUp } from 'helpers/handleGoogleSignUp';\nimport GoogleBtn from 'shared/components/GoogleBtn/GoogleBtn';\nimport { useModal } from '../../../context';\nimport { SuccessfullySendEmail } from '../..';\nimport { showOnboarding } from '../../../redux/auth/slice';\n\nconst SignUpForm = () => {\n  const dispatch = useDispatch();\n  const { openModal } = useModal();\n  const [showPassword, setShowPassword] = useState(false);\n  const {\n    register: registerField,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(signUpFormSchema),\n    mode: 'onSubmit',\n  });\n\n  const onSubmit = data => {\n    const { email, password } = data;\n    const newEmail = email.toLowerCase();\n    dispatch(register({ email: newEmail, password }));\n    reset();\n    openModal(<SuccessfullySendEmail email={email} />);\n  };\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  return (\n    <AuthFormLayout className={css.layout}>\n      <div className={css.registerContainer}>\n        <h2 className={css.title}>Sign Up</h2>\n        <form className={css.form} onSubmit={handleSubmit(onSubmit)}>\n          <label\n            className={clsx(css.field, { [css.errorField]: errors.email })}\n          >\n            Email\n            <input\n              className={clsx(css.input, { [css.inputError]: errors.email })}\n              placeholder=\"Enter your email\"\n              {...registerField('email', {\n                required: true,\n              })}\n            />\n          </label>\n          {errors.email && (\n            <p className={css.errorsMessage}>{errors.email.message}</p>\n          )}\n\n          <label\n            className={clsx(css.field, { [css.errorField]: errors.password })}\n          >\n            Password\n            <input\n              className={clsx(css.input, { [css.inputError]: errors.password })}\n              type={showPassword ? 'text' : 'password'}\n              placeholder=\"Enter your password\"\n              {...registerField('password', { required: true })}\n            />\n            <button\n              className={css.showPasswordBtn}\n              type=\"button\"\n              onClick={handleClickShowPassword}\n            >\n              {showPassword ? (\n                <Icon className={css.icon} iconId=\"icon-eye-off\" />\n              ) : (\n                <Icon className={css.icon} iconId=\"icon-eye\" />\n              )}\n            </button>\n          </label>\n          {errors.password && (\n            <p className={css.errorsMessage}>\n              {'must contain at least 8 characters'}\n            </p>\n          )}\n\n          <label\n            className={clsx(css.field, {\n              [css.errorField]: errors.confirmPassword,\n            })}\n          >\n            Repeat password\n            <input\n              className={clsx(css.input, {\n                [css.inputError]: errors.confirmPassword,\n              })}\n              type={showPassword ? 'text' : 'password'}\n              placeholder=\"Repeat password\"\n              {...registerField('confirmPassword', { required: true })}\n            />\n            <button\n              className={css.showPasswordBtn}\n              type=\"button\"\n              onClick={handleClickShowPassword}\n            >\n              {showPassword ? (\n                <Icon className={css.icon} iconId=\"icon-eye-off\" />\n              ) : (\n                <Icon className={css.icon} iconId=\"icon-eye\" />\n              )}\n            </button>\n          </label>\n          {errors.confirmPassword && (\n            <p className={css.errorsMessage}>{'password does not match'}</p>\n          )}\n\n          <input className={css.submit} type=\"submit\" value=\"Sign Up\" />\n        </form>\n\n        <GoogleBtn\n          context={'Sign Up with Google'}\n          onClick={() => {\n            handleGoogleSignUp();\n            dispatch(showOnboarding(true));\n          }}\n        />\n\n        <div className={css.inviteOnLogIn}>\n          <p className={css.inviteText}>Already have account?</p>\n          <Link className={css.link} to=\"/signin\">\n            Sign In\n          </Link>\n        </div>\n      </div>\n    </AuthFormLayout>\n  );\n};\n\nexport default SignUpForm;\n","import { Container, Logo, Section } from 'shared';\nimport { AdvantagesSection } from 'components';\nimport SignUpForm from 'components/signUpPage/SignUpForm/SignUpForm';\n\n\nconst SignUpPage = () => {\n\n  return (\n    <Section>\n      <Container>\n        <Logo />\n        <SignUpForm />\n        <AdvantagesSection className=\"signUpPage\" />\n      </Container>\n    </Section>\n  );\n};\n\nexport default SignUpPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"icon_google\":\"GoogleBtn_icon_google__WMmJL\",\"google_btn\":\"GoogleBtn_google_btn__+WD4M\"};","import { FcGoogle } from 'react-icons/fc';\nimport { Button } from 'shared';\nimport css from './GoogleBtn.module.css';\n\nconst GoogleBtn = ({ context, onClick }) => {\n  return (\n    <Button className={css.google_btn} onClick={onClick}>\n      <FcGoogle className={css.icon_google} />\n      {context}\n    </Button>\n  );\n};\n\nexport default GoogleBtn;\n"],"names":["handleGoogleSignUp","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","url","_context","prev","next","AXIOS_INSTANCE","sent","data","window","location","href","t0","toast","stop","apply","arguments","dispatch","useDispatch","openModal","useModal","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_useForm","useForm","resolver","yupResolver","signUpFormSchema","mode","registerField","register","handleSubmit","reset","errors","formState","handleClickShowPassword","_jsx","AuthFormLayout","className","css","children","_jsxs","onSubmit","email","password","newEmail","toLowerCase","SuccessfullySendEmail","clsx","_defineProperty","_objectSpread","placeholder","required","message","type","onClick","Icon","iconId","confirmPassword","value","GoogleBtn","context","showOnboarding","Link","to","Section","Container","Logo","SignUpForm","AdvantagesSection","Button","FcGoogle"],"sourceRoot":""}