{"version":3,"file":"static/js/968.a6151e08.chunk.js","mappings":"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","sources":["helpers/handleGoogleSignUp.js","webpack://aquatrack/./src/components/sigInPage/SignInForm/SignInForm.module.css?d48c","components/sigInPage/SignInForm/SignInForm.jsx","pages/SignInPage.jsx","webpack://aquatrack/./src/shared/components/GoogleBtn/GoogleBtn.module.css?9da0","shared/components/GoogleBtn/GoogleBtn.jsx"],"sourcesContent":["import toast from 'react-hot-toast';\nimport { AXIOS_INSTANCE } from '../redux/constants';\n\nexport const handleGoogleSignUp = async () => {\n  try {\n    const response = await AXIOS_INSTANCE.get('users/get-oauth-url');\n    const { url } = response.data.data;\n    window.location.href = url;\n  } catch (error) {\n    toast.error('Error getting Google OAuth URL');\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"registerContainer\":\"SignInForm_registerContainer__nNy1S\",\"title\":\"SignInForm_title__p6W+b\",\"form\":\"SignInForm_form__0AAJH\",\"labelWrapper\":\"SignInForm_labelWrapper__TBlKK\",\"label\":\"SignInForm_label__TQTdh\",\"inputWrapper\":\"SignInForm_inputWrapper__UFs9W\",\"input\":\"SignInForm_input__Ii5Yp\",\"errorMessage\":\"SignInForm_errorMessage__+UsY+\",\"inputError\":\"SignInForm_inputError__FQnkN\",\"button\":\"SignInForm_button__gPVXQ\",\"signUpText\":\"SignInForm_signUpText__cXH94\",\"signUpLink\":\"SignInForm_signUpLink__ONiVn\",\"showPasswordBtn\":\"SignInForm_showPasswordBtn__wCQ55\",\"icon\":\"SignInForm_icon__hPXti\"};","import { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { NavLink } from 'react-router-dom';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from '../../../redux/auth/operations';\nimport { signInFormSchema } from 'validationSchemas';\nimport { AuthFormLayout, Icon } from 'shared';\n\nimport clsx from 'clsx';\nimport css from './SignInForm.module.css';\nimport { handleGoogleSignUp } from 'helpers/handleGoogleSignUp';\nimport GoogleBtn from 'shared/components/GoogleBtn/GoogleBtn';\n\nconst SignInForm = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const dispatch = useDispatch();\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(signInFormSchema),\n    mode: 'onSubmit',\n    defaultValues: {\n      email: '',\n      password: '',\n    },\n  });\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const onSubmit = data => {\n    const { email, password } = data;\n    const newEmail = email.toLowerCase();\n    dispatch(logIn({ email: newEmail, password }));\n    reset();\n  };\n\n  return (\n    <AuthFormLayout>\n      <div className={css.registerContainer}>\n        <h2 className={css.title}>Sign In</h2>\n        <form onSubmit={handleSubmit(onSubmit)} className={css.form}>\n          <label className={css.labelWrapper}>\n            <span className={css.label}>Email: </span>\n            <input\n              type=\"email\"\n              {...register('email')}\n              placeholder=\"Enter your email\"\n              className={clsx(css.input, { [css.inputError]: errors.email })}\n            />\n            <p className={css.errorMessage}>{errors.email?.message}</p>\n          </label>\n          <label className={css.labelWrapper}>\n            <span className={css.label}>Password: </span>\n            <div className={css.inputWrapper}>\n              <input\n                type={showPassword ? 'text' : 'password'}\n                {...register('password')}\n                placeholder=\"Enter your password\"\n                className={clsx(css.input, {\n                  [css.inputError]: errors.password,\n                })}\n              />\n              <button\n                className={css.showPasswordBtn}\n                type=\"button\"\n                onClick={handleClickShowPassword}\n              >\n                {showPassword ? (\n                  <Icon className={css.icon} iconId=\"icon-eye-off\" />\n                ) : (\n                  <Icon className={css.icon} iconId=\"icon-eye\" />\n                )}\n              </button>\n            </div>\n            <p className={css.errorMessage}>{errors.password?.message}</p>\n          </label>\n          <button type=\"submit\" className={css.button}>\n            Sign in\n          </button>\n        </form>\n\n        <GoogleBtn\n          context={'Sign In with Google'}\n          onClick={handleGoogleSignUp}\n        />\n        <p className={css.signUpText}>\n          Don't have an account?{' '}\n          <NavLink to=\"/signup\" className={css.signUpLink}>\n            Sign Up\n          </NavLink>\n        </p>\n      </div>\n    </AuthFormLayout>\n  );\n};\n\nexport default SignInForm;\n","import { Container, Section, Logo } from 'shared';\nimport { AdvantagesSection } from 'components';\nimport SignInForm from 'components/sigInPage/SignInForm/SignInForm';\n\nconst SignInPage = () => {\n  return (\n    <Section>\n      <Container>\n        <Logo />\n        <SignInForm />\n        <AdvantagesSection className=\"signInPage\" />\n      </Container>\n    </Section>\n  );\n};\n\nexport default SignInPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"icon_google\":\"GoogleBtn_icon_google__WMmJL\",\"google_btn\":\"GoogleBtn_google_btn__+WD4M\"};","import { FcGoogle } from 'react-icons/fc';\nimport { Button } from 'shared';\nimport css from './GoogleBtn.module.css';\n\nconst GoogleBtn = ({ context, onClick }) => {\n  return (\n    <Button className={css.google_btn} onClick={onClick}>\n      <FcGoogle className={css.icon_google} />\n      {context}\n    </Button>\n  );\n};\n\nexport default GoogleBtn;\n"],"names":["handleGoogleSignUp","async","response","AXIOS_INSTANCE","url","data","window","location","href","error","toast","SignInForm","_errors$email","_errors$password","showPassword","setShowPassword","useState","dispatch","useDispatch","register","handleSubmit","reset","formState","errors","useForm","resolver","yupResolver","signInFormSchema","mode","defaultValues","email","password","_jsx","AuthFormLayout","children","_jsxs","className","css","onSubmit","newEmail","toLowerCase","logIn","type","placeholder","clsx","message","onClick","handleClickShowPassword","Icon","iconId","GoogleBtn","context","NavLink","to","SignInPage","Section","Container","Logo","AdvantagesSection","_ref","Button","FcGoogle"],"sourceRoot":""}