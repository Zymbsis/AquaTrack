{"version":3,"file":"static/js/935.a4aeac51.chunk.js","mappings":"4SACA,EAA0B,4BAA1B,EAAmE,+BAAnE,EAAsH,sCAAtH,EAAoK,0BAApK,EAAqM,yBAArM,EAAsO,0BAAtO,EAAkR,oCAAlR,EAA6T,yBAA7T,EAA8V,0BAA9V,EAAiY,2BAAjY,EAA4a,kCAA5a,EAA2d,+BAA3d,EAAigB,yBAAjgB,EAAuiB,+BAAviB,EAAslB,kCAAtlB,EAAqoB,+B,mBCY/nBA,EAASC,EAAAA,GAAW,CACxBC,MAAOD,EAAAA,KAAaC,QAAQC,WAC5BC,SAAUH,EAAAA,KAEPI,IAAI,EAAG,sCACPC,IAAI,IACJH,WACHI,gBAAiBN,EAAAA,KAAaO,MAAM,CAACP,EAAAA,GAAQ,YAAa,SA2H5D,EAxHmB,WACjB,IAAMQ,GAAWC,EAAAA,EAAAA,MACjBC,GAAwCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAEpCI,GAKIC,EAAAA,EAAAA,IAAQ,CACVC,UAAUC,EAAAA,EAAAA,GAAYpB,GACtBqB,KAAM,WANIC,EAAaL,EAAvBM,SACAC,EAAYP,EAAZO,aACAC,EAAKR,EAALQ,MACaC,EAAMT,EAAnBU,UAAaD,OAcTE,EAA0B,WAC9BZ,GAAiBD,EACnB,EAEA,OACEc,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAYC,SAAA,EAC1BC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACJ,UAAWC,KAEjBF,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAsBC,SAAA,EACpCC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAUC,SAAC,aAC1BH,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAUI,SAAUX,GAlB1B,SAAAY,GACf,IAAQlC,EAAoBkC,EAApBlC,MAAOE,EAAagC,EAAbhC,SACfK,GAASc,EAAAA,EAAAA,IAAS,CAAErB,MAAAA,EAAOE,SAAAA,KAC3BiC,QAAQC,IAAI,CAAEpC,MAAAA,EAAOE,SAAAA,IAErBqB,GACF,IAYkEO,SAAA,EAC1DH,EAAAA,EAAAA,MAAA,SACEC,WAAWS,EAAAA,EAAAA,GAAKR,GAASS,EAAAA,EAAAA,GAAA,GAAKT,EAAiBL,EAAOxB,QAAS8B,SAAA,CAChE,SAECC,EAAAA,EAAAA,KAAA,SAAAQ,EAAAA,EAAAA,GAAA,CACEX,WAAWS,EAAAA,EAAAA,GAAKR,GAASS,EAAAA,EAAAA,GAAA,GAAKT,EAAiBL,EAAOxB,QACtDwC,YAAY,oBACRpB,EAAc,QAAS,CACzBnB,UAAU,SAIfuB,EAAOxB,QACN+B,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAkBC,SAAEN,EAAOxB,MAAMyC,WAGjDd,EAAAA,EAAAA,MAAA,SACEC,WAAWS,EAAAA,EAAAA,GAAKR,GAASS,EAAAA,EAAAA,GAAA,GAAKT,EAAiBL,EAAOtB,WAAY4B,SAAA,CACnE,YAECC,EAAAA,EAAAA,KAAA,SAAAQ,EAAAA,EAAAA,GAAA,CACEX,WAAWS,EAAAA,EAAAA,GAAKR,GAASS,EAAAA,EAAAA,GAAA,GAAKT,EAAiBL,EAAOtB,WACtDwC,KAAM7B,EAAe,OAAS,WAC9B2B,YAAY,uBACRpB,EAAc,WAAY,CAAEnB,UAAU,OAE5C8B,EAAAA,EAAAA,KAAA,UACEH,UAAWC,EACXa,KAAK,SACLC,QAASjB,EAAwBI,SAEhCjB,GACCkB,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAAChB,UAAWC,EAAUgB,OAAO,kBAElCd,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAAChB,UAAWC,EAAUgB,OAAO,kBAIvCrB,EAAOtB,WACN6B,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAkBC,SAC7B,wCAILH,EAAAA,EAAAA,MAAA,SACEC,WAAWS,EAAAA,EAAAA,GAAKR,GAASS,EAAAA,EAAAA,GAAA,GACtBT,EAAiBL,EAAOnB,kBACxByB,SAAA,CACJ,mBAECC,EAAAA,EAAAA,KAAA,SAAAQ,EAAAA,EAAAA,GAAA,CACEX,WAAWS,EAAAA,EAAAA,GAAKR,GAASS,EAAAA,EAAAA,GAAA,GACtBT,EAAiBL,EAAOnB,kBAE3BqC,KAAM7B,EAAe,OAAS,WAC9B2B,YAAY,mBACRpB,EAAc,kBAAmB,CAAEnB,UAAU,OAEnD8B,EAAAA,EAAAA,KAAA,UACEH,UAAWC,EACXa,KAAK,SACLC,QAASjB,EAAwBI,SAEhCjB,GACCkB,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAAChB,UAAWC,EAAUgB,OAAO,kBAElCd,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAAChB,UAAWC,EAAUgB,OAAO,kBAIvCrB,EAAOnB,kBACN0B,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAkBC,SAAE,6BAGpCC,EAAAA,EAAAA,KAAA,SAAOH,UAAWC,EAAYa,KAAK,SAASI,MAAM,gBAEpDnB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAkBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAeC,SAAC,2BAC9BC,EAAAA,EAAAA,KAACgB,EAAAA,GAAI,CAACnB,UAAWC,EAAUmB,GAAG,UAASlB,SAAC,oBAOlD,EC5IA,GAAiB,EC2BjB,EAtBmB,WACjB,IAAArB,GAAsCC,EAAAA,EAAAA,UAASuC,OAAOC,YAAWvC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1D0C,EAAWxC,EAAA,GAAEyC,EAAczC,EAAA,GAWlC,OAVA0C,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,WACnBF,EAAeH,OAAOC,WACxB,EAEA,OADAD,OAAOM,iBAAiB,SAAUD,GAC3B,WACLL,OAAOM,iBAAiB,SAAUD,EACpC,CACF,GAAG,KAGDvB,EAAAA,EAAAA,KAACyB,EAAAA,GAAO,CAAA1B,UACNH,EAAAA,EAAAA,MAAC8B,EAAAA,GAAS,CAAC7B,UAAWC,EAAAA,gBAAoBC,SAAA,EACxCC,EAAAA,EAAAA,KAAC2B,EAAU,IACVP,EAAc,UAAWpB,EAAAA,EAAAA,KAAC4B,EAAAA,GAAiB,QAIpD,C","sources":["webpack://project-digitall3.0-r/./src/components/signUpPage/SignUpForm/SignUpForm.module.css?9268","components/signUpPage/SignUpForm/SignUpForm.jsx","pages/SignUpPage/SignUpPage.module.css","pages/SignUpPage/SignUpPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"SignUpForm_wrapper__kVG2l\",\"singUpLogo\":\"SignUpForm_singUpLogo__Y1keI\",\"registerContainer\":\"SignUpForm_registerContainer__eYjbh\",\"title\":\"SignUpForm_title__K-Qox\",\"form\":\"SignUpForm_form__4DtFD\",\"field\":\"SignUpForm_field__Psf2U\",\"showPasswordBtn\":\"SignUpForm_showPasswordBtn__uLYV-\",\"icon\":\"SignUpForm_icon__2LLbR\",\"input\":\"SignUpForm_input__QW3T3\",\"submit\":\"SignUpForm_submit__+QNoq\",\"inviteOnLogIn\":\"SignUpForm_inviteOnLogIn__SXq9e\",\"inviteText\":\"SignUpForm_inviteText__JBVKJ\",\"link\":\"SignUpForm_link__oDand\",\"errorField\":\"SignUpForm_errorField__cmbsE\",\"errorsMessage\":\"SignUpForm_errorsMessage__yqUD3\",\"inputError\":\"SignUpForm_inputError__x5D-v\"};","import clsx from 'clsx';\nimport { useForm } from 'react-hook-form';\nimport { useState } from 'react';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { Link } from 'react-router-dom';\nimport * as yup from 'yup';\nimport { register } from '../../../redux/auth/operations';\n\nimport { useDispatch } from 'react-redux';\nimport css from './SignUpForm.module.css';\n\nimport { Icon, Logo } from '../../../shared';\n\nconst schema = yup.object({\n  email: yup.string().email().required(),\n  password: yup\n    .string()\n    .min(8, 'must contain at least 8 characters')\n    .max(64)\n    .required(),\n  confirmPassword: yup.string().oneOf([yup.ref('password'), null]),\n});\n\nconst SignUpForm = () => {\n  const dispatch = useDispatch();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const {\n    register: registerField,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n    mode: 'onBlur',\n  });\n\n  const onSubmit = data => {\n    const { email, password } = data;\n    dispatch(register({ email, password }));\n    console.log({ email, password });\n\n    reset();\n  };\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  return (\n    <div className={css.wrapper}>\n      <Logo className={css.singUpLogo} />\n\n      <div className={css.registerContainer}>\n        <h2 className={css.title}>Sign Up</h2>\n        <form className={css.form} onSubmit={handleSubmit(onSubmit)}>\n          <label\n            className={clsx(css.field, { [css.errorField]: errors.email })}\n          >\n            Email\n            <input\n              className={clsx(css.input, { [css.inputError]: errors.email })}\n              placeholder=\"Enter your email\"\n              {...registerField('email', {\n                required: true,\n              })}\n            />\n          </label>\n          {errors.email && (\n            <p className={css.errorsMessage}>{errors.email.message}</p>\n          )}\n\n          <label\n            className={clsx(css.field, { [css.errorField]: errors.password })}\n          >\n            Password\n            <input\n              className={clsx(css.input, { [css.inputError]: errors.password })}\n              type={showPassword ? 'text' : 'password'}\n              placeholder=\"Enter your password\"\n              {...registerField('password', { required: true })}\n            />\n            <button\n              className={css.showPasswordBtn}\n              type=\"button\"\n              onClick={handleClickShowPassword}\n            >\n              {showPassword ? (\n                <Icon className={css.icon} iconId=\"icon-eye-off\" />\n              ) : (\n                <Icon className={css.icon} iconId=\"icon-eye\" />\n              )}\n            </button>\n          </label>\n          {errors.password && (\n            <p className={css.errorsMessage}>\n              {'must contain at least 8 characters'}\n            </p>\n          )}\n\n          <label\n            className={clsx(css.field, {\n              [css.errorField]: errors.confirmPassword,\n            })}\n          >\n            Repeat password\n            <input\n              className={clsx(css.input, {\n                [css.inputError]: errors.confirmPassword,\n              })}\n              type={showPassword ? 'text' : 'password'}\n              placeholder=\"Repeat password\"\n              {...registerField('confirmPassword', { required: true })}\n            />\n            <button\n              className={css.showPasswordBtn}\n              type=\"button\"\n              onClick={handleClickShowPassword}\n            >\n              {showPassword ? (\n                <Icon className={css.icon} iconId=\"icon-eye-off\" />\n              ) : (\n                <Icon className={css.icon} iconId=\"icon-eye\" />\n              )}\n            </button>\n          </label>\n          {errors.confirmPassword && (\n            <p className={css.errorsMessage}>{'password does not match'}</p>\n          )}\n\n          <input className={css.submit} type=\"submit\" value=\"Sign Up\" />\n        </form>\n        <div className={css.inviteOnLogIn}>\n          <p className={css.inviteText}>Already have account?</p>\n          <Link className={css.link} to=\"/signin\">\n            Sign In\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignUpForm;\n","// extracted by mini-css-extract-plugin\nexport default {};","import { useState, useEffect } from 'react';\nimport { AdvantagesSection } from 'components';\nimport SignUpForm from 'components/signUpPage/SignUpForm/SignUpForm';\nimport { Container, Section } from 'shared';\nimport css from './SignUpPage.module.css';\n\nconst SignUpPage = () => {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowWidth(window.innerWidth);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.addEventListener('resize', handleResize);\n    };\n  }, []);\n\n  return (\n    <Section>\n      <Container className={css.signUpContainer}>\n        <SignUpForm />\n        {windowWidth > 1439.98 && <AdvantagesSection />}\n      </Container>\n    </Section>\n  );\n};\n\nexport default SignUpPage;\n"],"names":["schema","yup","email","required","password","min","max","confirmPassword","oneOf","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_useForm","useForm","resolver","yupResolver","mode","registerField","register","handleSubmit","reset","errors","formState","handleClickShowPassword","_jsxs","className","css","children","_jsx","Logo","onSubmit","data","console","log","clsx","_defineProperty","_objectSpread","placeholder","message","type","onClick","Icon","iconId","value","Link","to","window","innerWidth","windowWidth","setWindowWidth","useEffect","handleResize","addEventListener","Section","Container","SignUpForm","AdvantagesSection"],"sourceRoot":""}